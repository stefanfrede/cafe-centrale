@font-face {
  font-display: swap;
  font-family: "Raleway";
  src: url("/fonts/Raleway-VF.woff2") format("woff2");
  font-weight: 100 900;
  font-style: normal;
}

@font-face {
  font-display: swap;
  font-family: "Sniglet";
  src: url("/fonts/Sniglet-webfont.ttf") format("truetype-variations");
  font-weight: 800;
  font-style: normal;
}

*,
::before,
::after {
  box-sizing: border-box;
}

:not(dialog) {
  margin: 0;
}

:not(fieldset, progress, meter) {
  background-origin: border-box;
  background-repeat: no-repeat;
  border-style: solid;
  border-width: 0;
}

html {
  block-size: 100%;
  font-family: var(--font-body);
  font-feature-settings:
    "ss01" 1,
    "ss03" 1,
    "ss05" 1,
    "ss08" 1,
    "ss09" 1,
    "ss11" 1;
  line-height: var(--leading-normal);
  text-size-adjust: none;

  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }
}

@media (prefers-reduced-motion: no-preference) {
  :focus-visible {
    transition: outline-offset 145ms var(--ease-2);
  }

  :is(:not(:active):focus-visible) {
    transition-duration: 0.25s;
  }
}

:not(:active):focus-visible {
  outline-offset: var(--space-3xs);
}

body {
  min-block-size: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: var(--leading-tight);
  font-weight: var(--font-bold);
  text-wrap: balance;
}

h1 {
  font-size: var(--step-5);
  max-inline-size: var(--measure-header-1);
  text-transform: uppercase;
}

h2 {
  font-size: var(--step-4);
  max-inline-size: var(--measure-header-2);
  text-transform: uppercase;
}

h3 {
  font-size: var(--step-3);
}

h4 {
  font-size: var(--step-2);
}

h5 {
  font-size: var(--step-1);
}

h3,
h4,
h5,
h6,
dt {
  max-inline-size: var(--measure-header-3);
}

p,
ul,
ol,
dl,
h6 {
  font-size: var(--step-0);
}

a,
u,
ins,
abbr {
  text-underline-offset: 1px;

  @supports (-moz-appearance: none) {
    text-underline-offset: 2px;
  }
}

a[href],
area,
button,
input:not(
    [type="text"],
    [type="email"],
    [type="number"],
    [type="password"],
    [type=""],
    [type="tel"],
    [type="url"]
  ),
label[for],
select,
summary,
[tabindex]:not([tabindex*="-"], pre) {
  cursor: pointer;
}

a[href],
area,
button,
input,
label[for],
select,
summary,
textarea,
[tabindex]:not([tabindex*="-"]) {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

a {
  &[href] {
    text-decoration-color: var(--indigo-2);

    &:visited {
      text-decoration-color: var(--purple-2);
    }
  }

  &:not(:hover) {
    text-decoration: inherit;
  }
}

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
}

img,
svg,
video {
  max-inline-size: 100%;
  block-size: auto;
}

input,
button,
textarea,
select,
input[type="file"]::-webkit-file-upload-button {
  font: inherit;
  font-size: inherit;
  color: inherit;
  letter-spacing: inherit;
}

::placeholder {
  color: var(--gray-7);
  opacity: 0.75;
}

input:not([type="range"]),
textarea {
  padding-inline: var(--space-2xs);
  padding-block: var(--space-3xs);
}

select {
  padding-inline: 1.25ch 0;
  padding-block: 0.75ch;
  field-sizing: content;
}

textarea,
select,
input:not([type="button"], [type="submit"], [type="reset"]) {
  background-color: var(--surface-2);
  border-radius: var(--radius-sm);
}

textarea {
  resize: block;
  field-sizing: content;
  min-inline-size: var(--measure-1);
  min-block-size: 2lh;
}

input[type="checkbox"],
input[type="radio"] {
  block-size: var(--space-xs);
  inline-size: var(--space-xs);
}

svg:not([width]) {
  inline-size: var(--space-2xl);
}

code,
kbd,
samp,
pre {
  font-family: var(--font-mono);
}

:not(pre) > code,
kbd {
  white-space: nowrap;
}

pre {
  white-space: pre;
  min-inline-size: 0;
  max-inline-size: max-content;
  writing-mode: lr;
  direction: ltr;
}

:not(pre) > code {
  padding: var(--space-3xs) var(--space-2xs);
  background: var(--surface-2);
  border-radius: var(--radius-sm);
  writing-mode: lr;
}

kbd,
var {
  border-width: var(--border-thin);
  padding: var(--space-3xs) var(--space-2xs);
  border-color: var(--surface-4);
  border-radius: var(--radius-sm);
}

mark {
  border-radius: var(--radius-sm);
  padding-inline: var(--space-3xs);
}

ol,
ul {
  padding-inline-start: var(--space-l);
}

li {
  padding-inline-start: var(--space-2xs);
}

li,
dd,
figcaption {
  max-inline-size: var(--measure-2);
}

p {
  max-inline-size: var(--measure-3);
  text-wrap: pretty;
}

dt,
summary {
  font-weight: var(--font-bold);
}

dt:not(:first-of-type) {
  margin-block-start: var(--space-m);
}

small {
  font-size: max(0.5em, var(--step--2));
  max-inline-size: var(--measure-1);
}

hr {
  margin-block: var(--space-xl-2xl);
  height: var(--border-normal);
  background-color: var(--surface-3);
}

figure {
  display: grid;
  gap: var(--grid-gutter);
  place-items: center;

  & > figcaption {
    font-size: var(--step--1);
    text-wrap: balance;
  }
}

blockquote,
:not(blockquote) > cite {
  border-inline-start-width: var(--border-thick);
}

blockquote {
  display: grid;
  gap: var(--grid-gutter);
  padding-block: var(--space-xs);
  padding-inline: var(--space-s);
  max-inline-size: var(--measure-2);
}

:not(blockquote) > cite {
  padding-inline-start: var(--space-2xs);
}

summary {
  background: var(--surface-3);
  padding: var(--space-2xs) var(--space-xs);
  margin: calc(var(--space-2xs) * -1) calc(var(--space-xs) * -1);
  border-radius: var(--radius-sm);
}

details {
  padding-inline: var(--space-xs);
  padding-block: var(--space-2xs);
  background: var(--surface-2);
  border-radius: var(--radius-sm);
}

details[open] > summary {
  margin-bottom: var(--space-2xs);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
}

fieldset {
  border-radius: var(--radius-sm);
  border: var(--border-thin) solid var(--surface-4);
}

del {
  background: var(--red-9);
  color: var(--red-2);
}

ins {
  background: var(--green-9);
  color: var(--green-1);
}

abbr {
  text-decoration-color: var(--blue-5);
}

dialog {
  background-color: var(--surface-1);
  color: inherit;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-6);
}

menu {
  padding-inline-start: 0;
  display: flex;
  gap: var(--grid-gutter);
}

sup {
  font-size: 0.5em;
}

table {
  width: fit-content;
  border: 1px solid var(--surface-2);
  background: var(--surface-2);
  border-radius: var(--radius-lg);

  --nice-inner-radius: calc(var(--radius-lg) - 2px);
}

table:not(:has(tfoot) tr:last-child td:first-child) {
  border-end-start-radius: var(--nice-inner-radius);
}

table:not(:has(tfoot) tr:last-child td:last-child) {
  border-end-end-radius: var(--nice-inner-radius);
}

table thead tr:first-child th:first-child {
  border-start-start-radius: var(--nice-inner-radius);
}

table thead tr:first-child th:last-child {
  border-start-end-radius: var(--nice-inner-radius);
}

tfoot tr:last-child :is(th, td):first-of-type {
  border-end-start-radius: var(--nice-inner-radius);
}

tfoot tr:last-child :is(th, td):last-of-type {
  border-end-end-radius: var(--nice-inner-radius);
}

th {
  color: var(--text-1);
  background-color: var(--surface-2);
}

table :is(a, button, [contenteditable]):is(:focus-visible) {
  outline-offset: -2px;
}

td {
  background: var(--surface-1);
  max-inline-size: var(--measure-2);
  text-wrap: pretty;
}

td,
th {
  text-align: left;
  padding: var(--space-2xs);
}

:is(td, th):not([align]) {
  text-align: center;
}

thead {
  border-collapse: collapse;
}

table tr:hover td,
tbody tr:nth-child(even):hover td {
  background-color: var(--surface-3);
}

table > caption {
  margin: var(--space-xs);
}

tfoot button {
  padding-block: var(--space-3xs);
  padding-inline: var(--space-xs);
}
